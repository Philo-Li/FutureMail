[{"D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\index.js":"1","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\App.js":"2","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\queries.js":"3","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\components\\Books.js":"4","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\components\\Authors.js":"5","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\components\\Recommend.js":"6","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\components\\NewBook.js":"7","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\components\\LoginForm.js":"8","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\config.js":"9"},{"size":1320,"mtime":1607323710504,"results":"10","hashOfConfig":"11"},{"size":3438,"mtime":1606805662136,"results":"12","hashOfConfig":"11"},{"size":1691,"mtime":1607323944540,"results":"13","hashOfConfig":"11"},{"size":2223,"mtime":1606805536539,"results":"14","hashOfConfig":"11"},{"size":2172,"mtime":1606804955598,"results":"15","hashOfConfig":"11"},{"size":1396,"mtime":1606805635450,"results":"16","hashOfConfig":"11"},{"size":3243,"mtime":1606805603397,"results":"17","hashOfConfig":"11"},{"size":1607,"mtime":1607324399257,"results":"18","hashOfConfig":"11"},{"size":361,"mtime":1607323694936,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"o2do4f",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\index.js",[],["45","46","47","48","49","50"],"D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\App.js",["51","52"],"/* eslint-disable react/button-has-type */\r\nimport React, { useState } from 'react';\r\nimport { useApolloClient, useSubscription } from '@apollo/client';\r\nimport Authors from './components/Authors';\r\nimport Books from './components/Books';\r\nimport NewBook from './components/NewBook';\r\nimport Recommend from './components/Recommend';\r\nimport LoginForm from './components/LoginForm';\r\nimport { BOOK_ADDED, FIND_BOOKS_BY_GENRE } from './queries';\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState('authors');\r\n  const [token, setToken] = useState(null);\r\n  const [favoriteGenre, setFavoriteGenre] = useState(null);\r\n  const client = useApolloClient();\r\n\r\n  const updateCacheWith = (addedBook) => {\r\n    const includedIn = (set, object) => set.map((p) => p.id).includes(object.id);\r\n\r\n    const dataInStoreBooks = client.readQuery({ query: FIND_BOOKS_BY_GENRE, variables: { genreToSearch: '' } });\r\n    // console.log('dataInStoreBooks1', dataInStoreBooks)\r\n    if (!includedIn(dataInStoreBooks.allBooks, addedBook)) {\r\n      client.writeQuery({\r\n        query: FIND_BOOKS_BY_GENRE,\r\n        variables: { genreToSearch: '' },\r\n        data: {\r\n          allBooks: [...dataInStoreBooks.allBooks, addedBook],\r\n        },\r\n      });\r\n    }\r\n    // eslint-disable-next-line max-len\r\n    const dataInStoreRecommend = client.readQuery({ query: FIND_BOOKS_BY_GENRE, variables: { genreToSearch: favoriteGenre } });\r\n    // console.log('dataInStoreRecommend1', dataInStoreRecommend)\r\n    if (!includedIn(dataInStoreRecommend.allBooks, addedBook)) {\r\n      client.writeQuery({\r\n        query: FIND_BOOKS_BY_GENRE,\r\n        variables: { genreToSearch: favoriteGenre },\r\n        data: {\r\n          allBooks: [...dataInStoreRecommend.allBooks, addedBook],\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useSubscription(BOOK_ADDED, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      const addedBook = subscriptionData.data.bookAdded;\r\n      window.alert(`${addedBook.title} added`);\r\n      console.log('subscriptionData', subscriptionData);\r\n      updateCacheWith(addedBook);\r\n    },\r\n  });\r\n\r\n  const login = () => (\r\n    <div>\r\n      <button onClick={() => setPage('authors')}>authors</button>\r\n      <button onClick={() => setPage('books')}>books</button>\r\n      <button onClick={() => setPage('login')}>login</button>\r\n      <LoginForm\r\n        show={page === 'login'}\r\n        setToken={setToken}\r\n        setPage={setPage}\r\n        setFavoriteGenre={setFavoriteGenre}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const logout = () => {\r\n    setPage('authors');\r\n    setToken(null);\r\n    localStorage.clear();\r\n    client.resetStore();\r\n  };\r\n\r\n  const loggedin = () => (\r\n    <div>\r\n      <button onClick={() => setPage('authors')}>authors</button>\r\n      <button onClick={() => setPage('books')}>books</button>\r\n      <button onClick={() => setPage('add')}>add book</button>\r\n      <button onClick={() => setPage('recommend')}>recommend</button>\r\n      <button onClick={() => logout()}>logout</button>\r\n      <NewBook\r\n        show={page === 'add'}\r\n      />\r\n\r\n      <Recommend\r\n        show={page === 'recommend'}\r\n        favoriteGenre={favoriteGenre}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {!token ? login() : loggedin() }\r\n      </div>\r\n\r\n      <Authors\r\n        show={page === 'authors'}\r\n      />\r\n\r\n      <Books\r\n        show={page === 'books'}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\queries.js",[],"D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\components\\Books.js",["53","54","55"],"/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useQuery, useLazyQuery } from '@apollo/client';\r\nimport { ALL_BOOKS, FIND_BOOKS_BY_GENRE } from '../queries';\r\n\r\nconst Books = (props) => {\r\n  const [select, setSelect] = useState('');\r\n  const { loading, error, data } = useQuery(ALL_BOOKS);\r\n  const [getBooks, result] = useLazyQuery(FIND_BOOKS_BY_GENRE);\r\n\r\n  useEffect(() => {\r\n    getBooks({ variables: { genreToSearch: String(select) } });\r\n  }, [select]);\r\n\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  const books = data.allBooks;\r\n  const booksToShow = result.data ? result.data.allBooks : books;\r\n\r\n  console.log(books);\r\n  console.log('select', select);\r\n  console.log('result', result.data);\r\n\r\n  let allGenres = [];\r\n\r\n  books.map((book) => {\r\n    book.genres.map((genre) => {\r\n      // eslint-disable-next-line space-before-blocks\r\n      if (!allGenres.includes(genre)){\r\n        allGenres = [...allGenres, genre];\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>books</h2>\r\n      {select ? (\r\n        <p>in genre <b>{select}</b></p>\r\n      ) : (\r\n        <p><b>all genres</b></p>\r\n      )}\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th />\r\n            <th>\r\n              author\r\n            </th>\r\n            <th>\r\n              published\r\n            </th>\r\n          </tr>\r\n          {booksToShow.map((a) => (\r\n            <tr key={a.title}>\r\n              <td>{a.title}</td>\r\n              <td>{a.author.name}</td>\r\n              <td>{a.published}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* {select ? <Book select={select}></Book> : null} */}\r\n      {allGenres.map((a) => <button key={a} onClick={() => setSelect(a)}>{a}</button>)}\r\n      <button key=\"allGenres\" onClick={() => setSelect('')}>all genres</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\components\\Authors.js",["56","57"],"/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React, { useState } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport Select from 'react-select';\r\nimport { ALL_AUTHORS, EDIT_AUTHOR } from '../queries';\r\n\r\nconst Authors = (props) => {\r\n  const [nameSelected, setNameSelected] = useState(null);\r\n  const [born, setBorn] = useState('');\r\n  const { loading, error, data } = useQuery(ALL_AUTHORS);\r\n  const [editBorn] = useMutation(EDIT_AUTHOR, {\r\n    refetchQueries: [{ query: ALL_AUTHORS }],\r\n  });\r\n\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  const authors = data.allAuthors;\r\n  console.log(authors);\r\n\r\n  const submit = async (event) => {\r\n    event.preventDefault();\r\n    const name = nameSelected.value;\r\n\r\n    console.log('edit birthyear...', name, born);\r\n\r\n    editBorn({ variables: { name, born } });\r\n    setBorn('');\r\n  };\r\n\r\n  const authorsOption = authors.map((a) => {\r\n    const result = { value: a.name, label: a.name };\r\n    return result;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>authors</h2>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th />\r\n            <th>\r\n              born\r\n            </th>\r\n            <th>\r\n              books\r\n            </th>\r\n          </tr>\r\n          {authors.map((a) => (\r\n            <tr key={a.name}>\r\n              <td>{a.name}</td>\r\n              <td>{a.born}</td>\r\n              <td>{a.bookCount}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h3>set birthyear</h3>\r\n      <form onSubmit={submit}>\r\n        <Select\r\n          defaultValue={nameSelected}\r\n          onChange={setNameSelected}\r\n          options={authorsOption}\r\n        />\r\n        <div>\r\n          born\r\n          <input\r\n            type=\"number\"\r\n            value={born}\r\n            onChange={({ target }) => setBorn(Number(target.value))}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">update author</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authors;\r\n","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\components\\Recommend.js",["58"],"/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React, { useEffect } from 'react';\r\nimport { useQuery, useLazyQuery } from '@apollo/client';\r\nimport { USER, FIND_BOOKS_BY_GENRE } from '../queries';\r\n\r\nconst Recommend = ({ show, favoriteGenre }) => {\r\n  const [getBooks, result] = useLazyQuery(FIND_BOOKS_BY_GENRE);\r\n  const { loading, error, data } = useQuery(USER);\r\n\r\n  useEffect(() => {\r\n    if (favoriteGenre) {\r\n      getBooks({ variables: { genreToSearch: String(favoriteGenre) } });\r\n    }\r\n  }, [data]);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  const booksToShow = result.data.allBooks;\r\n  console.log(booksToShow, result.data);\r\n\r\n  return (\r\n    <div>\r\n      <h2>books</h2>\r\n      <p>\r\n        books in your favorite genre:\r\n        <b>{favoriteGenre}</b>\r\n      </p>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th />\r\n            <th>\r\n              author\r\n            </th>\r\n            <th>\r\n              published\r\n            </th>\r\n          </tr>\r\n          {booksToShow.map((a) => (\r\n            <tr key={a.title}>\r\n              <td>{a.title}</td>\r\n              <td>{a.author.name}</td>\r\n              <td>{a.published}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommend;\r\n","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\components\\NewBook.js",["59","60"],"import React, { useState } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { USER, ADD_BOOK, FIND_BOOKS_BY_GENRE } from '../queries';\r\n\r\nconst NewBook = (props) => {\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuhtor] = useState('');\r\n  const [published, setPublished] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [genres, setGenres] = useState([]);\r\n  const user = useQuery(USER);\r\n\r\n  const [createBook, { loading, error, data }] = useMutation(ADD_BOOK, {\r\n    update: (store, response) => {\r\n      const dataInStoreBooks = store.readQuery({ query: FIND_BOOKS_BY_GENRE, variables: { genreToSearch: '' } });\r\n      // console.log('dataInStoreBooks1', dataInStoreBooks, response)\r\n      store.writeQuery({\r\n        query: FIND_BOOKS_BY_GENRE,\r\n        variables: { genreToSearch: '' },\r\n        data: {\r\n          allBooks: [...dataInStoreBooks.allBooks, response.data.addBook],\r\n        },\r\n      });\r\n      const favoriteGenre = String(user.data.me.favoriteGenre);\r\n      // eslint-disable-next-line max-len\r\n      const dataInStoreRecommend = store.readQuery({ query: FIND_BOOKS_BY_GENRE, variables: { genreToSearch: favoriteGenre } });\r\n      // console.log('dataInStoreRecommend1', dataInStoreRecommend, response)\r\n      store.writeQuery({\r\n        query: FIND_BOOKS_BY_GENRE,\r\n        variables: { genreToSearch: favoriteGenre },\r\n        data: {\r\n          allBooks: [...dataInStoreRecommend.allBooks, response.data.addBook],\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n\r\n  const submit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log('add book...');\r\n\r\n    createBook({\r\n      variables: {\r\n        title, author, published, genres,\r\n      },\r\n    });\r\n    console.log(loading, error, data);\r\n\r\n    setTitle('');\r\n    setPublished('');\r\n    setAuhtor('');\r\n    setGenres([]);\r\n    setGenre('');\r\n  };\r\n\r\n  const addGenre = () => {\r\n    setGenres(genres.concat(genre));\r\n    setGenre('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submit}>\r\n        <div>\r\n          title\r\n          <input\r\n            value={title}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author\r\n          <input\r\n            value={author}\r\n            onChange={({ target }) => setAuhtor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          published\r\n          <input\r\n            type=\"number\"\r\n            value={published}\r\n            onChange={({ target }) => setPublished(Number(target.value))}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            value={genre}\r\n            onChange={({ target }) => setGenre(target.value)}\r\n          />\r\n          <button onClick={addGenre} type=\"button\">add genre</button>\r\n        </div>\r\n        <div>\r\n          genres:\r\n          {' '}\r\n          {genres.join(' ')}\r\n        </div>\r\n        <button type=\"submit\">create book</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBook;\r\n","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\components\\LoginForm.js",["61","62","63","64","65"],"import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN } from '../queries';\r\n\r\nconst LoginForm = ({\r\n  show, setToken, setPage,\r\n}) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [login, { loading, error, data }] = useMutation(LOGIN);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const token = data.authorize.accessToken;\r\n      setToken(token);\r\n      setPage('authors');\r\n      console.log('token:', token);\r\n      console.log('data:', data);\r\n      localStorage.setItem('library-user-token', token);\r\n      console.log('localStorage:', localStorage);\r\n    }\r\n  }, [data]) // eslint-disable-line\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  const submit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log('login...');\r\n\r\n    login({ variables: { username, password } });\r\n    console.log(loading, error, data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submit}>\r\n        <div>\r\n          name\r\n          <input\r\n            value={username}\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","D:\\Work\\CS\\GitHub\\futuremail\\futuremail-frontend\\src\\config.js",["66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":48,"column":7,"nodeType":"81","messageId":"82","endLine":48,"endColumn":47},{"ruleId":"83","severity":1,"message":"84","line":49,"column":7,"nodeType":"85","messageId":"82","endLine":49,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":29,"column":3,"nodeType":"85","messageId":"82","endLine":29,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":30,"column":3,"nodeType":"85","messageId":"82","endLine":30,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":31,"column":3,"nodeType":"85","messageId":"82","endLine":31,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":24,"column":3,"nodeType":"85","messageId":"82","endLine":24,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":30,"column":5,"nodeType":"85","messageId":"82","endLine":30,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":24,"column":3,"nodeType":"85","messageId":"82","endLine":24,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":49,"column":5,"nodeType":"85","messageId":"82","endLine":49,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":56,"column":5,"nodeType":"85","messageId":"82","endLine":56,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":18,"column":7,"nodeType":"85","messageId":"82","endLine":18,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":19,"column":7,"nodeType":"85","messageId":"82","endLine":19,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":21,"column":7,"nodeType":"85","messageId":"82","endLine":21,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":35,"column":5,"nodeType":"85","messageId":"82","endLine":35,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":38,"column":5,"nodeType":"85","messageId":"82","endLine":38,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":6,"column":1,"nodeType":"85","messageId":"82","endLine":6,"endColumn":12},"lines-around-directive",["86"],"no-spaced-func",["87"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-alert","Unexpected alert.","CallExpression","unexpected","no-console","Unexpected console statement.","MemberExpression","padding-line-between-statements","func-call-spacing"]